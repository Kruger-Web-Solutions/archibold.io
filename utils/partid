#########################
# archibold.io (C) 2016 #
#########################

partid() {
  if [ "$1" = "--help" ] || [ "$1" = "-h" ]; then
    echo ''
    echo -e "$(tput bold)example$(tput sgr0)"
    echo ''
    echo -e "  partid /dev/sda              \x1B[90m# lists partitions$(tput sgr0)"
    echo -e "  partid /dev/mmcblk0 swap     \x1B[90m# get swap UUID$(tput sgr0)"
    echo -e "  partid /dev/mmcblk0p3        \x1B[90m# get UUID$(tput sgr0)"
    echo ''
    echo -e "  partid create                \x1B[90m# UUID for ext4$(tput sgr0)"
    echo -e "  partid create /dev/mmcblk0p3 \x1B[90m# set UUID$(tput sgr0)"
    echo ''
    return
  elif [ "$1" = "create" ]; then
    if [ "$2" = "" ]; then
      cat /proc/sys/kernel/random/uuid
    else
      if [ "$(which sudo 2> /dev/null)" = "" ]; then
        yes y | tune2fs -U $(cat /proc/sys/kernel/random/uuid) "$2"
      else
        sudo bash -c "yes y | tune2fs -U $(cat /proc/sys/kernel/random/uuid) $2"
      fi
    fi
    return
  elif [ "$1" = "" ]; then
    return
  fi
  local type="$2"
  local disk="$1"
  local length=${#disk}
  local list="$(ls ${disk}* 2> /dev/null)"
  local found=
  local info=
  blkid -g
  if [ "$type" = "" ]; then
    if [ "$list" = "$disk" ]; then
      if [ "$(blkid -o value "$disk")" = "" ]; then
        for info in $(lsblk --output UUID "$disk"); do
          if [ "$found" = "true" ]; then
            echo $info
            return
          else
            found=true
          fi
        done
      else
        for info in $(blkid -o value "$disk"); do
          if [ "$info" != "msdos" ]; then
            echo $info
            return
          fi
        done
      fi
    else
      if [ "$(blkid -o value "$disk")" = "" ]; then
        lsblk --output NAME,UUID,FSTYPE "$disk"
      else
        for info in $(blkid); do
          if [ "${info:0:$length}" = "$disk" ] && [ "${info:0:-1}" != "$disk" ]; then
            blkid "${info:0:-1}"
          fi
        done
      fi
    fi
  else
    if [ "$(blkid -o value "$disk")" = "" ]; then
      for info in $(lsblk --output FSTYPE,UUID "$disk"); do
        if [ "$info" = "$type" ]; then
          found=true
        elif [ "$found" = "true" ]; then
          echo $info
          return
        fi
      done
    else
      for info in $(blkid); do
        if [ "${info:0:$length}" = "$disk" ] && [ "${info:0:-1}" != "$disk" ]; then
          for info in $(blkid -o value "${info:0:-1}"); do
            if [ "$info" = "$type" ]; then
              echo "$found"
              return
            fi
            found="$info"
          done
        fi
      done
    fi
  fi
}
