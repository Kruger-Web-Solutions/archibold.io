#!/usr/bin/env bash

#########################
# archibold.io (C) 2016 #
#########################

if [ "$(which sudo 2> /dev/null)" = "" ]; then
  bash <(curl -s archibold.io/install/sudo)
fi

if [ "$(which echomd 2> /dev/null)" = "" ]; then
  bash <(curl -s archibold.io/install/echomd)
fi

archibold() {
  local TMP=
  case $1 in

    clean)
      if [ "$(which yaourt 2> /dev/null)" = "" ]; then
        sudo pacman -Sc --noconfirm
        while [ "$(sudo pacman -Qdtq)" != "" ]; do
          sudo pacman -R --noconfirm $(sudo pacman -Qdtq)
        done
      else
        yaourt -Sc --noconfirm
        while [ "$(yaourt -Qdtq)" != "" ]; do
          yaourt -R --noconfirm $(yaourt -Qdtq)
        done
      fi
      sudo pacman-optimize
      ;;

    install)
      if [ "$2" = "yaourt" ]; then
        if [ "$(which $2 2> /dev/null)" = "" ]; then
          bash <(curl -s archibold.io/install/$2)
        fi
      elif [ "$(which yaourt 2> /dev/null)" = "" ]; then
        sudo pacman -S --needed --noconfirm $2
      else
        yaourt -S --needed --noconfirm $2
      fi
      ;;

    offline)
      echomd "Current updates: **$(gsettings get org.gnome.software  download-updates)**"
      gsettings set org.gnome.software  download-updates false
      echomd "Automatic updates now **disabled**".
      ;;

    online)
      echomd "Current updates: **$(gsettings get org.gnome.software  download-updates)**"
      gsettings set org.gnome.software  download-updates true
      echomd "Automatic updates now **enabled**".
      ;;

    remove)
      if [ "$(which yaourt 2> /dev/null)" = "" ]; then
        sudo pacman -Rs $2
      else
        yaourt -Rs $2
      fi
      ;;

    reset-keys)
      sudo dirmngr </dev/null
      sudo pacman -Sy --noconfirm
      sudo pacman-key -u
      sudo pacman-key --populate archlinux
      sudo pacman-key --refresh-keys
      ;;

    search)
      if [ "$(which yaourt 2> /dev/null)" = "" ]; then
        sudo pacman -Ss $2
      else
        yaourt -Ss $2
      fi
      TMP=$(curl -Ls archibold.io/install | grep $2)
      if [ "$TMP" != "" ]; then
        echomd "
# archibold.io version
bash <(curl -s archibold.io/install/$2)
"
      fi
      ;;

    uninstall)
      archibold remove $2
      ;;

    update)
      if [ "$(which archibold 2> /dev/null)" != "" ]; then
        TMP="$(which archibold)"
        cd /tmp
        curl -LOs archibold.io/utils/archibold
        if [ -f archibold ]; then
          # echo 'archibold "$@"' >> archibold
          chmod a+x archibold
          sudo mv archibold $TMP
        fi
        cd -
      fi
      if [ "$(which yaourt 2> /dev/null)" != "" ]; then
        yaourt -Syua --noconfirm
      else
        sudo pacman -Syu --noconfirm
      fi
      sudo pacman-db-upgrade
      ;;

    upgrade)
      archibold update && archibold clean
      ;;

    *)
      echomd '
# archibold.io

  Simplified *Arch Linux* Operations
  #grey(https://www.archlinux.org/)

  #green(Usage):    archibold [option]

  #green(System Options):
  archibold *clean*             #grey(clean and optimize db cache)
  archibold *offline*           #grey(disable GNOME Software updates)
  archibold *online*            #grey(enable GNOME Software updates)
  archibold *reset-keys*        #grey(earse and refresh db keys)
  archibold *update*            #grey(update all installed packages)

  #green(Packages Options):
  archibold *search*  $SWNAME   #grey(search for generic software)
  archibold *install* $SWNAME   #grey(install generic software)
  archibold *remove*  $SWNAME   #grey(uninstall generic software)

'
    ;;

  esac
}

archibold "$@"
